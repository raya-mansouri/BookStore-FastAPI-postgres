"""3th fix book_author table

Revision ID: 9507469daea2
Revises: f18f05747a6c
Create Date: 2025-01-25 23:57:10.078779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9507469daea2'
down_revision: Union[str, None] = 'f18f05747a6c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('BookAuthor_author_id_fkey', 'BookAuthor', type_='foreignkey')
    op.drop_constraint('BookAuthor_book_id_fkey', 'BookAuthor', type_='foreignkey')
    op.create_foreign_key(None, 'BookAuthor', 'book', ['book_id'], ['id'], source_schema='public')
    op.create_foreign_key(None, 'BookAuthor', 'author', ['author_id'], ['id'], source_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'BookAuthor', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'BookAuthor', schema='public', type_='foreignkey')
    op.create_foreign_key('BookAuthor_book_id_fkey', 'BookAuthor', 'book', ['book_id'], ['id'])
    op.create_foreign_key('BookAuthor_author_id_fkey', 'BookAuthor', 'author', ['author_id'], ['id'])
    # ### end Alembic commands ###
